[versions]
kotlin = "1.6.20-RC"
arrow = "1.0.3-alpha.30"
arrowGradleConfig = "0.10.0"
coroutines = "1.6.0"
dokka = "1.6.10"
kover = "0.5.0"
spring = "2.6.4"
reactorKotlinExtensions = "1.1.6"
undertow = "2.2.16.Final"
kotest = "5.2.1"
kotestGradle = "5.2.1"
kotestArrow = "1.2.3"
detekt = "1.19.0"
nettyTransport = "4.1.75.Final"
testcontainers = "1.16.3"
hikari = "5.0.1"
postgresql = "42.3.3"
kjwt = "0.5.1"
flyway = "8.5.4"
springBoot = "2.6.4"
kotlinBinaryCompatibilityValidator = "0.8.0"

[libraries]
kotlin-stdlibCommon = { module = "org.jetbrains.kotlin:kotlin-stdlib-common", version.ref = "kotlin" }
kotlin-stdlibJDK8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
dokka-core = { module = "org.jetbrains.dokka:dokka-core", version.ref = "dokka" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "coroutines" }
coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }
coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-fx = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }

spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring" }
reactor-kotlin-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version.ref = "reactorKotlinExtensions" }
undertow = { module = "io.undertow:undertow-core", version.ref = "undertow" }
netty-transport-native-kqueue = { module = "io.netty:netty-transport-native-kqueue", version.ref = "nettyTransport" }

kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-frameworkEngine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-arrow = { module = "io.kotest.extensions:kotest-assertions-arrow", version.ref = "kotestArrow" }
kotest-property-arrow = { module = "io.kotest.extensions:kotest-property-arrow", version.ref = "kotestArrow" }

testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
kjwt-core = { module = "io.github.nefilim.kjwt:kjwt-core", version.ref = "kjwt" }

[plugins]
arrowGradleConfig-formatter = { id = "io.arrow-kt.arrow-gradle-config-formatter", version.ref = "arrowGradleConfig" }
arrowGradleConfig-versioning = { id = "io.arrow-kt.arrow-gradle-config-versioning", version.ref = "arrowGradleConfig" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotestGradle" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-plugin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-plugin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
springframework-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
kotlin-binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinBinaryCompatibilityValidator" }
